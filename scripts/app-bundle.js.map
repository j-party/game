{"version":3,"sources":["app-data.ts","clue.ts","database-parser.ts","randomizer.ts","clue-service.ts","player.ts","game-state.ts","app.ts","board.ts","clue-detail.ts","environment.ts","input.ts","keyboard-service.ts","input-service.ts","main.ts","title-screen.ts","resources/index.ts","/home/eheikes/www/jparty/game/src/app.html","app.scss","/home/eheikes/www/jparty/game/src/board.html","/home/eheikes/www/jparty/game/src/clue-detail.html","board.scss","clue-detail.scss","/home/eheikes/www/jparty/game/src/title-screen.html"],"names":[],"mappings":"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IJA,CDCC,AAAC,CAAA,GCDG,EAAE,CDCC,CHGC,CGHC,AAAC,ACDA,CJIA,AGHA,GHGI,IGHG,CAAC;EHInB,AGHE,ACDF,MAAM,EAAE,EJIE,EAAE,CAAE,CIJC,IDCK,EAAE,UAAW;EHIjC,AGHE,ACDF,KAAK,EAAE,IJII,EAAE,CAAE,AIJA,CDCE,EHIlB,AGJoB,UAAW;EAC5B,ACDF,UDCY,CCDD,CDCG,CCDD,IAAK,GACnB,EDA0B,GAC1B;AHGD,AAAI,GAAD,CAAC,CAAC,CAAC;AGFN,ACDA,EJIE,AGHA,CAAC,ECDE,CAAC,GJIG,EAAE,QAAS;EAClB,AGHA,ACDA,MAAM,EAAE,EDCE,CCDE,CDCA,GHGG,EAAE,CGHE,GHGG;EACtB,AGJqB,ACArB,SAAS,CJIC,CIJC,CJIC,CGJsB,CCAnB,CDAqB,CHInB,AGJqB,GACvC;EHIC,AIJA,OJIO,EAAE,GIJG,EAAE,IAAK,GJIG,AIHvB;CDAD,AAAc,CHIZ,IGJD,EAAO,MAAP,AAAa,EAAE,EHIE,EAAE,IAAK;AIHzB,EJIE,AGJA,ICAI,CAAC,QJIQ,AGJA,EHIE,AGJA,GHII,CGJC,EHKrB;EGJC,ACAA,UAAU,EAAE,EDAE,EAAE,ACAC,IDAI,GACtB;AHID,AAAK,EIJH,CJIC,CAAC,CAAC,QAAQ,AIJA,EJIE,AAAC,AIJD,CJIC,IIJK,CJIA,CAAC;CGHtB,AAAe,CHIb,AIJA,IDAD,CHIM,CGJC,CHIC,KGJR,AAAa,CAAC,CHIE,EIJC,CJKjB,CILmB,IAAK,IDAG,CAAC;EAC3B,ACAA,MAAM,EAAE,IAAK,CDAA,EAAE,CAAE,GAClB;AHID,AAAK,EIJH,CJIC,CAAC,CAAC,IIJI,EJIE,AIJA,CJIC,OIJQ;ADCpB,EHIE,AIJA,GDAG,CAAC,CHIC,EAAE,MIJM,CJIE,CIJA,GAAI;EJKnB,AGJA,ACAA,MDAM,ACAA,EDAE,ACAA,CDAE,GACX,GCDiB,CJIA,EAAE,OAAQ,GAC3B;EILmB,MAAM,EAAE,IAAK,GAChC;AJKD,AAAK,AGJL,GHIG,CAAC,CAAC,GGJG,CAAC,eHIe,CAAC;AIJzB,AAAM,EJKJ,AGJA,ICDI,CJKC,AGJA,EHIE,AGJA,GAAI,ACDD,CAAC,EDEZ,CHGgB,GAChB;EILC,gBAAgB,EAAE,OAAQ,GAC3B;ADCD,OAAO,CAAC;ACAR,AAAM,EDCF,ICDE,GDCK,EAAE,IAAK,ACDH,CAAC;EDEZ,ACDF,UDCY,EAAE,ICDE,EDCK,ACDH,IAAK;EDErB,ACDF,KDCO,ACDF,EDCI,ACDF,IDCO,ACDF;EDEV,ACDF,MAAM,EAAE,EDCI,EAAE,ACDD,GACd,EDAqB;EAClB,SAAS,EAAE,KAAM;EACjB,gBAAgB,EAAE,OAAQ;EAC1B,aAAa,EAAE,GAAI,GACtB;;AACD,EAAE,CAAC;EACD,QAAQ,EAAE,QAAS,GACpB;;AACD,AAAO,OAAA,MAAM,CAAC;EACZ,gBAAgB,EAAE,IAAK;EACvB,MAAM,EAAE,OAAQ;EAChB,KAAK,EAAE,OAAQ,GAChB;;AACD,SAAS,CAAC;EACR,OAAO,EAAE,MAAO,GACjB;;AACD,AAA2B,SAAlB,IAAG,KAAC,EAAO,MAAP,AAAa,CAAC,aAAa,CAAC;EACvC,aAAa,EAAE,IAAK,GACrB;;AACD,MAAM,EAAL,SAAS,EAAE,KAAK;EACb,OAAO,CAAC;IACN,SAAS,EAAE,IAAK;IAChB,UAAU,EAAE,IAAK,GAAG;;AAE1B,MAAM,EAAL,SAAS,EAAE,MAAM;EACd,KAAK,CAAC;IACJ,MAAM,EAAE,CAAE,GACX;EACD,OAAO,CAAC;IACN,SAAS,EAAE,IAAK,GACjB","file":"app-bundle.js","sourcesContent":["export const appData = {\n  author: 'Manmade Games',\n  date: 2016,\n  license: 'Apache 2.0',\n  name: 'J!Party'\n};\n","export class Clue {\n  id: number;\n  clue: string;\n  answer: string;\n  value: number;\n  isRevealed: boolean = false;\n}\n\nexport class Category {\n  id: number;\n  name: string;\n  isFinal: boolean;\n  clues: Clue[];\n}\n","//\n// Service for parsing the database text file.\n//\nexport interface DatabaseRow {\n  [key: string]: any,\n  done?: boolean,\n  total?: number,\n\n  // database columns:\n  answer?: string,\n  categoryId?: string,\n  clue?: string,\n  id?: string,\n  level?: string,\n  name?: string,\n};\n\nexport class DatabaseParser {\n  parseList(text: string, callback: Function) {\n    let rowCountLine = 0;\n    let headerLine = 1;\n\n    // Split it out by rows.\n    let rows = text.split(/[\\r\\n]+/);\n\n    // Send the count.\n    let count = rows[rowCountLine];\n    callback({ total: count });\n\n    // Parse the rows into columns.\n    let parsedRow: DatabaseRow;\n    let header = rows[headerLine].split('|');\n    for (let i = headerLine + 1; i < rows.length; i++) {\n      if (rows[i].indexOf('|') === -1) { continue; }\n      parsedRow = {};\n      let cols = rows[i].split('|');\n      for (let j = 0; j < cols.length; j++) {\n        parsedRow[header[j]] = cols[j];\n      }\n      callback(parsedRow);\n    }\n\n    // Send the \"done\" message.\n    callback({ done: true });\n  }\n};\n","import Random = require('random-js');\n\nexport class Randomizer {\n  engine: Random;\n  constructor() {\n    this.engine = new Random(Random.engines.mt19937().autoSeed());\n  }\n  generate(min: number, max: number): number {\n    return this.engine.integer(min, max);\n   }\n}\n","import { inject } from 'aurelia-framework';\nimport { HttpClient } from 'aurelia-fetch-client';\n\nimport { Clue, Category } from './clue';\nimport { DatabaseRow, DatabaseParser } from './database-parser';\nimport { Randomizer } from './randomizer';\n\n@inject(DatabaseParser, HttpClient, Randomizer)\nexport class ClueService {\n  private categoriesFile = 'categories.txt';\n  private cluesFile = 'clues.txt';\n  private clues: Category[] = [];\n  private hasLoaded = false;\n  constructor(\n    private dbParser: DatabaseParser,\n    private http: HttpClient,\n    private randomizer: Randomizer\n  ) {}\n  // Chooses X number of categories with clues.\n  choose(num: Number): Promise<Category[]> {\n    // TODO This should not have possible duplicates.\n    let categories: Category[] = [];\n    for (let i = 0; i < num; i++) {\n      let index = this.randomizer.generate(0, this.clues.length);\n      categories.push(this.clues[index]);\n    }\n    return Promise.resolve(categories);\n  }\n  getClue(id: number): Clue {\n    return this.clues[0].clues[0];\n  }\n  // Returns all clues in the database.\n  getClues() {\n    return Promise.resolve(this.clues);\n  }\n  // Loads the clues into the browser.\n  loadClues(): Promise<void> {\n\n    let categoryRawData: string;\n    let clueRawData: string;\n\n    let loadDataFiles = (): Promise<void> => {\n      return Promise.all([\n        this.http.fetch(this.categoriesFile).then(response => response.text()),\n        this.http.fetch(this.cluesFile).then(response => response.text())\n      ]).then(data => {\n        [categoryRawData, clueRawData] = data;\n      });\n    };\n\n    let parseData = (): Promise<void> => {\n      let parser = (data: string) => {\n        let parsedData: DatabaseRow[] = [];\n        return new Promise(resolve => {\n          this.dbParser.parseList(data, (row: DatabaseRow) => {\n            if (row.total) {\n              // do nothing special\n            } else if (row.done) {\n              resolve(parsedData);\n            } else {\n              parsedData.push(row);\n            }\n          });\n        });\n      };\n      return Promise.all([\n        parser(categoryRawData),\n        parser(clueRawData)\n      ]).then((data: [DatabaseRow[], DatabaseRow[]]) => {\n        let [categoryParsedData, clueParsedData] = data;\n\n        interface IIndexedData {\n          [key: number]: Category;\n        }\n        let indexedData: IIndexedData = {};\n        categoryParsedData.forEach(category => {\n          let categoryId = Number(category.id);\n          let newCategory: Category = {\n            id: categoryId,\n            name: String(category.name),\n            isFinal: false,\n            clues: []\n          }\n          indexedData[categoryId] = newCategory;\n        });\n        clueParsedData.forEach(clue => {\n          let categoryId = Number(clue.categoryId);\n          let level = Number(clue.level) === 999 ? 0 : Number(clue.level);\n          let newClue: Clue = {\n            id: Number(clue.id),\n            clue: String(clue.clue),\n            answer: String(clue.answer),\n            value: 0,\n            isRevealed: false\n          };\n          indexedData[categoryId].isFinal = Number(clue.level) === 999;\n          indexedData[categoryId].clues[level] = newClue;\n        });\n\n        this.clues = Object.keys(indexedData).map(key => {\n          return indexedData[Number(key)];\n        });\n      });\n    };\n\n    return loadDataFiles().then(parseData).then(() => { this.hasLoaded = true; });\n  }\n}\n","export class Player {\n  public money: number = 0;\n  constructor(public name: string) {}\n}\n","import { appData } from './app-data';\nimport { Category } from './clue';\nimport { Player } from './player';\n\nexport class GameRound {\n  baseValue: number = 100;\n  incrementalValue: number = 100;\n  name: string = appData.name;\n  number: number = 0;\n}\n\nexport class GameState {\n  public categories: Category[];\n  public currentPlayer: Player;\n  public players: Player[];\n  public round: GameRound;\n\n  private calculateValues() {\n    this.categories = this.categories.map(category => {\n      category.clues = category.clues.map((clue, i) => {\n        clue.value = this.round.baseValue + this.round.incrementalValue * i;\n        return clue;\n      });\n      return category;\n    });\n  }\n\n  reset(players: Player[], categories: Category[]) {\n    this.players = players;\n    this.currentPlayer = this.players[0];\n    this.categories = categories;\n    this.round = new GameRound();\n    this.calculateValues();\n  }\n}\n","import { inject } from 'aurelia-framework';\nimport { Router, RouterConfiguration } from 'aurelia-router';\n\nimport { appData } from './app-data';\nimport { ClueService } from './clue-service';\nimport { GameState } from './game-state';\nimport { Player } from './player';\n\n@inject(ClueService, GameState)\nexport class App {\n  title = appData.name;\n  router: Router;\n\n  constructor(\n    private clueService: ClueService,\n    private gameState: GameState\n  ) {}\n\n  configureRouter(config: RouterConfiguration, router: Router) {\n    config.title = this.title;\n    config.map([\n      { route: '',          moduleId: 'title-screen' },\n      { route: 'board',     moduleId: 'board',       name: 'board' },\n      { route: 'clue/:id',  moduleId: 'clue-detail', name: 'clueDetail' },\n    ]);\n    this.router = router;\n  }\n\n  created() {\n    console.log('Loading clues...');\n    return this.clueService.loadClues().then(() => {\n      console.log('clues loaded');\n      return this.clueService.choose(6);\n    }).then(categories => {\n      let players = [\n        new Player('You'),\n        new Player('Computer 1'),\n        new Player('Computer 2'),\n      ];\n      this.gameState.reset(players, categories);\n    }).catch(err => { console.log('ERROR!', err) });\n  }\n}\n","import { inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\n\nimport { Category, Clue } from './clue';\nimport { GameRound, GameState } from './game-state';\nimport { Player } from './player';\n\n@inject(GameState, Router)\nexport class Board {\n  categories: Category[];\n  currentPlayer: Player;\n  players: Player[];\n  round: GameRound;\n  constructor(\n    private gameState: GameState,\n    private router: Router\n  ) {}\n  created() {\n    this.categories = this.gameState.categories;\n    this.currentPlayer = this.gameState.currentPlayer;\n    this.players = this.gameState.players;\n    this.round = this.gameState.round;\n  }\n  gotoDetail(clue: Clue) {\n    this.router.navigateToRoute('clueDetail', { id: clue.id });\n  }\n}\n","import { inject } from 'aurelia-framework';\nimport { Clue } from './clue';\nimport { ClueService } from './clue-service';\n\n@inject(ClueService)\nexport class ClueDetailComponent {\n  clue: Clue;\n  constructor(\n    private clueService: ClueService,\n  ) {}\n  activate(params: { id?: number }) {\n    let id = Number(params.id);\n    this.clue = this.clueService.getClue(id);\n  }\n  goBack() {\n    window.history.back();\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","export enum InputType {\n  Keyboard,\n  Mouse,\n  Touch\n}\n\nexport class Input {\n  constructor(\n    public type: InputType\n  ) {}\n}\n","import { Input, InputType } from './input';\n\nexport class KeyboardService {\n  // Resolves if any key is pressed.\n  waitForAny(): Promise<Input> {\n    return new Promise((resolve, reject) => {\n      document.onkeypress = (event) => {\n        resolve(new Input(InputType.Keyboard));\n      };\n    });\n  }\n}\n","import { inject } from 'aurelia-framework';\nimport { Input, InputType } from './input';\nimport { KeyboardService } from './keyboard-service';\n\n@inject(KeyboardService)\nexport class InputService {\n  constructor(\n    private keyboardService: KeyboardService\n  ) {}\n  // Resolves if any key is pressed, the mouse is clicked, or the screen is tapped.\n  waitForAny(): Promise<Input> {\n    return Promise.race([\n      this.keyboardService.waitForAny()\n    ]);\n  }\n}\n","import { Aurelia } from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  return aurelia.start().then(() => aurelia.setRoot());\n}\n","import { BindingEngine, inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\n\nimport { appData } from './app-data';\nimport { ClueService } from './clue-service';\nimport { InputService } from './input-service';\n\n@inject(BindingEngine, ClueService, InputService, Router)\nexport class TitleScreen {\n  private app = appData;\n  private loading: boolean = true;\n\n  constructor(\n    private bindingEngine: BindingEngine,\n    private clueService: ClueService,\n    private inputService: InputService,\n    private router: Router\n  ) {}\n\n  created() {\n    let turnOffLoading = () => this.loading = false;\n\n    let waitForInput = () => {\n      return this.inputService.waitForAny().then(() => {\n        this.router.navigateToRoute('board');\n      });\n    };\n\n    let subscription = this.bindingEngine.propertyObserver(this.clueService, 'hasLoaded')\n      .subscribe((newValue, oldValue) => {\n        turnOffLoading();\n        waitForInput();\n        subscription.dispose();\n      });\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,"h1 {\n  font-size: 1.2em;\n  color: #999;\n  margin-bottom: 0;\n}\nh2 {\n  font-size: 2em;\n  margin-top: 0;\n  padding-top: 0;\n}\nnav a {\n  padding: 5px 10px;\n  text-decoration: none;\n  margin-top: 10px;\n  display: inline-block;\n  background-color: #eee;\n  border-radius: 4px;\n}\nnav a:visited, a:link {\n  color: #607D8B;\n}\nnav a:hover {\n  color: #039be5;\n  background-color: #CFD8DC;\n}\nnav a.router-link-active {\n  color: #039be5;\n}\n",null,null,"[class*='col-'] {\n  float: left;\n}\n*, *:after, *:before {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n}\nh3 {\n  text-align: center; margin-bottom: 0;\n}\n[class*='col-'] {\n  padding-right: 20px;\n  padding-bottom: 20px;\n}\n[class*='col-']:last-of-type {\n  padding-right: 0;\n}\n.grid {\n  margin: 0;\n}\n.col-1-4 {\n  width: 25%;\n}\n.module {\n    padding: 20px;\n    text-align: center;\n    color: #eee;\n    max-height: 120px;\n    min-width: 120px;\n    background-color: #607D8B;\n    border-radius: 2px;\n}\nh4 {\n  position: relative;\n}\n.module:hover {\n  background-color: #EEE;\n  cursor: pointer;\n  color: #607d8b;\n}\n.grid-pad {\n  padding: 10px 0;\n}\n.grid-pad > [class*='col-']:last-of-type {\n  padding-right: 20px;\n}\n@media (max-width: 600px) {\n    .module {\n      font-size: 10px;\n      max-height: 75px; }\n}\n@media (max-width: 1024px) {\n    .grid {\n      margin: 0;\n    }\n    .module {\n      min-width: 60px;\n    }\n}\n","label {\n  display: inline-block;\n  width: 3em;\n  margin: .5em 0;\n  color: #607D8B;\n  font-weight: bold;\n}\ninput {\n  height: 2em;\n  font-size: 1em;\n  padding-left: .4em;\n}\nbutton {\n  margin-top: 20px;\n  font-family: Arial;\n  background-color: #eee;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 4px;\n  cursor: pointer; cursor: hand;\n}\nbutton:hover {\n  background-color: #cfd8dc;\n}\nbutton:disabled {\n  background-color: #eee;\n  color: #ccc;\n  cursor: auto;\n}\n",null],"sourceRoot":"../src"}