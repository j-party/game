{"version":3,"sources":["app.ts","clue.ts","database-parser.ts","clue-service.ts","clue-detail.ts","clues.ts","dashboard.ts","environment.ts","game-state.ts","input.ts","keyboard-service.ts","input-service.ts","main.ts","title-screen.ts","resources/index.ts","/home/eheikes/www/jparty/game/src/app.html","app.scss","/home/eheikes/www/jparty/game/src/clue-detail.html","/home/eheikes/www/jparty/game/src/clues.html","clue-detail.scss","clues.scss","/home/eheikes/www/jparty/game/src/dashboard.html","dashboard.scss","/home/eheikes/www/jparty/game/src/title-screen.html"],"names":[],"mappings":"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AE,GAAG,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC;QAClD,CAAC;QArBH;YAAC,0BAAM,CAAC,0BAAW,EAAE,4BAAY,EAAE,uBAAM,CAAC;;uBAAA;QAsB1C,kBAAC;IAAD,CArBA,AAqBC,IAAA;IArBY,mBAAW,cAqBvB,CAAA;;;;;IC1BD,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;ACJD;ACAA,EAAE,CAAC;ACAH,EDCE,SAAS,EAAE,KAAM;AEDnB,EFEE,KAAK,EAAE,IAAK;AGFd,EHGE,GGHG,CAAC,SHGS,EAAE,CAAE,GAClB;AIJD,EDCE,OAAO,ACDA,CAAC,CDCC,YAAa;AEDxB,ALKA,EAAE,AGHA,ACDA,CJIC,IGHI,EAAE,GAAI,MCDK,EAAE,kBAAmB;CEDvC,AAAc,CNMZ,AGHA,ACDA,IEFD,CFEM,CDCC,AGHA,CFEC,CDCC,CHGC,EAAE,CIJE,AEFd,AAAa,ENMG,AGHA,AGHD,CFGf;AGHD,EPOE,AGHA,AGHA,KHGK,AGHA,EHGE,AGHA,GNMG,CMNE,CNMA,CAAE,CGHC,AGFhB;AFED,EJIE,AGHA,ICDI,CAAC,MJIM,AGHA,EHGE,AGHA,CHGE,GAChB,AGJmB,GACnB;AGHD,CAAC,CFEC,CEFC,AAAC,CAAA,IFEI,EAAE,AEFA,EAAE,AAAC,CAAA,MFEO,CEFA,CAAC;ANOrB,AAAI,AGHJ,ECDE,AEFE,CNMD,CAAC,CAAC,AGHA,CHGC,AGHA,WCDW,EAAE,CEFG,EAAE,CFEA,SEFW;ENOjC,AGHA,ACDA,AEFE,MHGI,CHGC,AIJA,CDCC,CHGC,AIJA,CAAE,CDCC,IGHK,ENMC,AMNC,UAAW;ENO9B,AGHA,ACDA,AEFE,KFEG,EAAE,EDCE,CGHG,CHGD,ACDC,CEFE,EHGC,ACAhB,CJGgB,EAAE,IAAK,CMNG,GAC1B;ENMC,AGHA,UHGU,EAAE,AGHA,EAAE,EHGG,EGHE,GACpB;ACDD,AAAO,AEFP,ENME,AMNA,CAAC,GFEG,CAAC,EJIE,AIJA,CAAC,CJIC,YAAa;AGFxB,EHGE,AIJA,AEFA,IHGI,CAAC,CCDC,EAAE,EEFE,EAAE,GFEI,CJIA,EAAE,AMNC,INMI;EACvB,AGHA,ACDA,AEHqB,QFGb,EDCE,ACDA,EDCE,CHGC,AMPqB,ENOnB,AMPqB,CHInB,AGJqB,ENOnB,AIJA,CEFpB,ENOA;EGHC,ACDA,IAAI,EAAE,CAAE,IDCG,EAAE,KAAM;AHIrB,AAAK,CMPL,AAAc,CHIZ,ACDA,CJIC,CAAC,CAAC,CMPJ,EAAO,KNOK,CMPZ,AAAa,CNOC,AAAC,CAAA,AMPA,EHIE,ACDA,EDCE,ACDA,CJIC,CAAC,EGHG,ACDA;EJKvB,AGHA,ACDA,AEHA,KNOK,CGHC,ACDA,CJIC,CGHC,ACDA,IDCK,ACDA,CEHA,CNOE,CMPA,ENQhB,EMRqB;EHKpB,ACDA,AEHA,OHIO,ACDA,EDCE,ACDA,KEHK,CFGE,CEHA,CHIE,GGJG,GACtB;ANOD,AAAK,EGHH,ACDA,CJIC,CAAC,CAAC,MAAM,CAAC,GGHG,ACDA,EDCE,ACDA,GDCI,ACDA,GACpB;CEHD,AAAe,CNOb,AGHA,IGJD,CNOM,CGHC,AGJA,CNOC,CGHC,IGJT,AAAa,CAAC,CNOE,CGHC,WGJU,CAAC;AFI7B,AAAU,EJIR,AGJkB,AGHlB,IFGI,CAAC,CDAmB,CCAjB,CDAmB,ACAlB,IDAuB,CCAlB,AEHA,CFGC,CDCf,AGJgB,CNOC,AMPC,ENOC,CMNnB,MNM2B,GAC3B;EIJC,OAAO,EAAE,KAAM,GAChB;AJID,AAAK,AGJL,AAAM,AGHN,GNOG,CAAC,CAAC,AMPA,CHGC,AGHA,MHGM,CAAC,WHIW,CAAC;AIHzB,AAAkB,EJIhB,AGJA,AGHA,IFGI,CJIC,AIJA,CEHC,CNOC,AIJA,CEHC,CAAE,GACX,ENMgB,EGJC,ACAA,CJKjB,CGLmB,ICAI,CAAC,EDAG,GAC3B;ECAC,gBAAgB,EAAE,kBAAmB;ADCvC,AAAM,AGHN,EFGE,IDAI,CCAC,CEHC,CFGC,AEHA,KFGM,CDAA,CAAC,CCCf;EDAC,AGHA,KAAK,EAAE,GAAI,GACZ,GHEiB,EAAE,IAAK;ACCzB,AAAS,EDAP,ICAI,CDAC,ACAA,EDAE,ACAA,IDAK,ECAC,CAAC;AEFhB,EHGE,ACAA,KAAK,AEHA,CHGC,AGHA,CFGC,CDAC,IAAK,ECAE,CDChB;ECAC,AEHE,OAAO,EAAE,IAAK,GFGA,EAAE,IAAK;EACvB,AEHE,IFGE,EAAE,IAAK,AEHC,EAAE,CFIf,KEJsB;EACnB,KAAK,EAAE,IAAK;AFIhB,AAAO,EEHH,IFGE,CAAC,KAAK,AEHE,CFGD,CEHG,KAAM;EFIpB,AEHE,QFGM,CEHG,CFGD,CEHG,KAAM,EFGA;EACnB,AEHE,GFGC,EAAE,IAAK,GACX,IEJmB,EAAE,OAAQ;EAC1B,aAAa,EAAE,GAAI,GACtB;AFGD,AAAO,MAAD,CAAC,MAAM,CAAC;AEFd,EFGE,AEHA,CAAC,MFGM,EAAE,YAAa;EACtB,AEHA,QAAQ,CFGC,CEHC,CFGC,KAAM,EEHE,GACpB;EFGC,KAAK,EAAE,KAAM;AEFf,AAAO,EFGL,KEHK,EFGE,EAAE,EEHE,CAAC,gBFGiB;EAC7B,AEHA,gBFGgB,AEHA,EFGE,AEHA,IAAK,GFGG;EAC1B,AEHA,MAAM,EAAE,GFGG,EAAE,EEHG,CFGC;EACjB,AEHA,KAAK,EAAE,CFGC,EAAE,IEHK,GAChB,CFEoB;EACnB,IAAI,EAAE,IAAK;AEFb,EFGE,GAAG,EAAE,EEHE,CAAC,CFGE;EACV,AEHA,MFGM,CEHC,CFGC,CEHC,IFGK,EEHE,GACjB;EFGC,YAAY,EAAE,IAAK;AEFrB,AAA2B,EFGzB,OEHO,IAAG,EFGG,EAAE,CEHJ,EAAO,MAAP,AAAa,CAAC,CFGE,GAC5B,SEJuC,CAAC;EACvC,aAAa,EAAE,IAAK,GACrB;;AACD,MAAM,EAAL,SAAS,EAAE,KAAK;EACb,OAAO,CAAC;IACN,SAAS,EAAE,IAAK;IAChB,UAAU,EAAE,IAAK,GAAG;;AAE1B,MAAM,EAAL,SAAS,EAAE,MAAM;EACd,KAAK,CAAC;IACJ,MAAM,EAAE,CAAE,GACX;EACD,OAAO,CAAC;IACN,SAAS,EAAE,IAAK,GACjB","file":"app-bundle.js","sourcesContent":["import { Router, RouterConfiguration } from 'aurelia-router';\n\nexport class App {\n  title = 'J!Party';\n  router: Router;\n\n  configureRouter(config: RouterConfiguration, router: Router) {\n    config.title = this.title;\n    config.map([\n      { route: '',          moduleId: 'title-screen' },\n      { route: 'dashboard', moduleId: 'dashboard',   name: 'dashboard' },\n      { route: 'board',     moduleId: 'clues',       name: 'board' },\n      { route: 'clue/:id',  moduleId: 'clue-detail', name: 'clueDetail' },\n    ]);\n    this.router = router;\n  }\n}\n","export class Clue {\n  id: number;\n  clue: string;\n  answer: string;\n}\n\nexport class Category {\n  id: number;\n  name: string;\n  isFinal: boolean;\n  clues: Clue[];\n}\n","//\n// Service for parsing the database text file.\n//\nexport interface DatabaseRow {\n  done?: boolean,\n  total?: number,\n\n  // database columns:\n  answer?: string,\n  categoryId?: string,\n  clue?: string,\n  id?: string,\n  level?: string,\n  name?: string,\n};\n\nexport class DatabaseParser {\n  parseList(text: string, callback: Function) {\n    let rowCountLine = 0;\n    let headerLine = 1;\n\n    // Split it out by rows.\n    let rows = text.split(/[\\r\\n]+/);\n\n    // Send the count.\n    let count = rows[rowCountLine];\n    callback({ total: count });\n\n    // Parse the rows into columns.\n    let parsedRow: DatabaseRow;\n    let header = rows[headerLine].split('|');\n    for (let i = headerLine + 1; i < rows.length; i++) {\n      if (rows[i].indexOf('|') === -1) { continue; }\n      parsedRow = {};\n      let cols = rows[i].split('|');\n      for (let j = 0; j < cols.length; j++) {\n        parsedRow[header[j]] = cols[j];\n      }\n      callback(parsedRow);\n    }\n\n    // Send the \"done\" message.\n    callback({ done: true });\n  }\n};\n","import { inject } from 'aurelia-framework';\nimport { HttpClient } from 'aurelia-fetch-client';\n\nimport { Clue, Category } from './clue';\nimport { DatabaseRow, DatabaseParser } from './database-parser';\n// import { Randomizer } from './randomizer.service';\n\n@inject(DatabaseParser, HttpClient)\nexport class ClueService {\n  private categoriesFile = 'categories.txt';\n  private cluesFile = 'clues.txt';\n  private clues: Category[] = [];\n  constructor(\n    private dbParser: DatabaseParser,\n    private http: HttpClient,\n  //   private randomizer: Randomizer\n  ) {}\n  // Chooses X number of categories with clues.\n  choose(num: Number): Promise<Category[]> {\n    // TODO This should not have possible duplicates.\n    let categories: Category[] = [];\n    for (let i = 0; i < num; i++) {\n      // let index = this.randomizer.generate(0, this.clues.length);\n      categories.push(this.clues[i]);\n    }\n    return Promise.resolve(categories);\n  }\n  getClue(id): Clue {\n    return this.clues[0].clues[0];\n  }\n  // Returns all clues in the database.\n  getClues() {\n    return Promise.resolve(this.clues);\n  }\n  // Loads the clues into the browser.\n  loadClues(): Promise<void> {\n\n    let categoryRawData: string;\n    let clueRawData: string;\n\n    let loadDataFiles = (): Promise<void> => {\n      return Promise.all([\n        this.http.fetch(this.categoriesFile).then(response => response.text()),\n        this.http.fetch(this.cluesFile).then(response => response.text())\n      ]).then(data => {\n        [categoryRawData, clueRawData] = data;\n      });\n    };\n\n    let parseData = (): Promise<void> => {\n      let parser = (data: string) => {\n        let parsedData: DatabaseRow[] = [];\n        return new Promise(resolve => {\n          this.dbParser.parseList(data, (row: DatabaseRow) => {\n            if (row.total) {\n              // do nothing special\n            } else if (row.done) {\n              resolve(parsedData);\n            } else {\n              parsedData.push(row);\n            }\n          });\n        });\n      };\n      return Promise.all([\n        parser(categoryRawData),\n        parser(clueRawData)\n      ]).then((data: [DatabaseRow[], DatabaseRow[]]) => {\n        let [categoryParsedData, clueParsedData] = data;\n\n        let indexedData = {};\n        categoryParsedData.forEach(category => {\n          let categoryId = Number(category.id);\n          let newCategory: Category = {\n            id: categoryId,\n            name: category.name,\n            isFinal: false,\n            clues: []\n          }\n          indexedData[categoryId] = newCategory;\n        });\n        clueParsedData.forEach(clue => {\n          let categoryId = Number(clue.categoryId);\n          let level = Number(clue.level) === 999 ? 0 : Number(clue.level);\n          let newClue: Clue = {\n            id: Number(clue.id),\n            clue: clue.clue,\n            answer: clue.answer\n          };\n          indexedData[categoryId].isFinal = Number(clue.level) === 999;\n          indexedData[categoryId].clues[level] = newClue;\n        });\n\n        this.clues = Object.keys(indexedData).map(key => {\n          return indexedData[key];\n        });\n      });\n    };\n\n    return loadDataFiles().then(parseData);\n  }\n}\n","import { inject } from 'aurelia-framework';\nimport { Clue } from './clue';\nimport { ClueService } from './clue-service';\n\n@inject(ClueService)\nexport class ClueDetailComponent {\n  clue: Clue;\n  constructor(\n    private clueService: ClueService,\n  ) {}\n  activate(params) {\n    let id = Number(params.id);\n    this.clue = this.clueService.getClue(id);\n  }\n  goBack() {\n    window.history.back();\n  }\n}\n","import { inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\n\nimport { Clue, Category } from './clue';\nimport { ClueService } from './clue-service';\n\n@inject(ClueService, Router)\nexport class Clues {\n  clues: Category[];\n  selectedClue: Clue;\n  constructor(\n    private clueService: ClueService,\n    private router: Router\n  ) {}\n  getClues() {\n    this.clueService.getClues().then(clues => this.clues = clues);\n  }\n  created() {\n    this.getClues();\n  }\n  onSelect(clue: Clue) { this.selectedClue = clue; }\n  gotoDetail() {\n    this.router.navigateToRoute('clueDetail', { id: this.selectedClue.id });\n  }\n}\n","import { inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\n\nimport { Category, Clue } from './clue';\nimport { ClueService } from './clue-service';\n\n@inject(ClueService, Router)\nexport class Dashboard {\n  categories: Category[] = [];\n  constructor(\n    private clueService: ClueService,\n    private router: Router\n  ) {}\n  created() {\n    this.clueService.choose(6).then(categories => { this.categories = categories; });\n  }\n  gotoDetail(clue: Clue) {\n    this.router.navigateToRoute('clueDetail', { id: clue.id });\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","export class GameState {\n}\n","export enum InputType {\n  Keyboard,\n  Mouse,\n  Touch\n}\n\nexport class Input {\n  constructor(\n    public type: InputType\n  ) {}\n}\n","import { Input, InputType } from './input';\n\nexport class KeyboardService {\n  // Resolves if any key is pressed.\n  waitForAny(): Promise<Input> {\n    return new Promise((resolve, reject) => {\n      document.onkeypress = (event) => {\n        resolve(new Input(InputType.Keyboard));\n      };\n    });\n  }\n}\n","import { inject } from 'aurelia-framework';\nimport { Input, InputType } from './input';\nimport { KeyboardService } from './keyboard-service';\n\n@inject(KeyboardService)\nexport class InputService {\n  constructor(\n    private keyboardService: KeyboardService\n  ) {}\n  // Resolves if any key is pressed, the mouse is clicked, or the screen is tapped.\n  waitForAny(): Promise<Input> {\n    return Promise.race([\n      this.keyboardService.waitForAny()\n    ]);\n  }\n}\n","import { Aurelia } from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\n\nimport { ClueService } from './clue-service';\nimport { InputService } from './input-service';\n\n@inject(ClueService, InputService, Router)\nexport class TitleScreen {\n  private loading: boolean = true;\n  constructor(\n    private clueService: ClueService,\n    private inputService: InputService,\n    private router: Router\n  ) {}\n  created() {\n    let turnOffLoading = () => this.loading = false;\n\n    let waitForInput = () => {\n      return this.inputService.waitForAny().then(() => {\n        this.router.navigateToRoute('dashboard');\n      });\n    };\n\n    this.clueService.loadClues().then(() => {\n      turnOffLoading();\n      waitForInput();\n    }).catch(err => { console.log('ERROR!', err) });\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,"h1 {\n  font-size: 1.2em;\n  color: #999;\n  margin-bottom: 0;\n}\nh2 {\n  font-size: 2em;\n  margin-top: 0;\n  padding-top: 0;\n}\nnav a {\n  padding: 5px 10px;\n  text-decoration: none;\n  margin-top: 10px;\n  display: inline-block;\n  background-color: #eee;\n  border-radius: 4px;\n}\nnav a:visited, a:link {\n  color: #607D8B;\n}\nnav a:hover {\n  color: #039be5;\n  background-color: #CFD8DC;\n}\nnav a.router-link-active {\n  color: #039be5;\n}\n",null,null,"label {\n  display: inline-block;\n  width: 3em;\n  margin: .5em 0;\n  color: #607D8B;\n  font-weight: bold;\n}\ninput {\n  height: 2em;\n  font-size: 1em;\n  padding-left: .4em;\n}\nbutton {\n  margin-top: 20px;\n  font-family: Arial;\n  background-color: #eee;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 4px;\n  cursor: pointer; cursor: hand;\n}\nbutton:hover {\n  background-color: #cfd8dc;\n}\nbutton:disabled {\n  background-color: #eee;\n  color: #ccc;\n  cursor: auto;\n}\n",".selected {\n  background-color: #CFD8DC !important;\n  color: white;\n}\n.clues {\n  margin: 0 0 2em 0;\n  list-style-type: none;\n  padding: 0;\n  width: 15em;\n}\n.clues li {\n  cursor: pointer;\n  position: relative;\n  left: 0;\n  background-color: #EEE;\n  margin: .5em;\n  padding: .3em 0;\n  border-radius: 4px;\n}\n.clues li label {\n  display: block;\n}\n.clues li.selected:hover {\n  background-color: #BBD8DC !important;\n  color: white;\n}\n.clues li:hover {\n  color: #607D8B;\n  background-color: #DDD;\n  left: .1em;\n}\n.clues .text {\n  position: relative;\n  top: -3px;\n}\n.clues .badge {\n  display: inline-block;\n  font-size: small;\n  color: white;\n  padding: 0.8em 0.7em 0 0.7em;\n  background-color: #607D8B;\n  line-height: 1em;\n  position: relative;\n  left: -1px;\n  top: -4px;\n  height: 1.8em;\n  margin-right: .8em;\n  border-radius: 4px 0 0 4px;\n}\n",null,"[class*='col-'] {\n  float: left;\n}\n*, *:after, *:before {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n}\nh3 {\n  text-align: center; margin-bottom: 0;\n}\n[class*='col-'] {\n  padding-right: 20px;\n  padding-bottom: 20px;\n}\n[class*='col-']:last-of-type {\n  padding-right: 0;\n}\n.grid {\n  margin: 0;\n}\n.col-1-4 {\n  width: 25%;\n}\n.module {\n    padding: 20px;\n    text-align: center;\n    color: #eee;\n    max-height: 120px;\n    min-width: 120px;\n    background-color: #607D8B;\n    border-radius: 2px;\n}\nh4 {\n  position: relative;\n}\n.module:hover {\n  background-color: #EEE;\n  cursor: pointer;\n  color: #607d8b;\n}\n.grid-pad {\n  padding: 10px 0;\n}\n.grid-pad > [class*='col-']:last-of-type {\n  padding-right: 20px;\n}\n@media (max-width: 600px) {\n    .module {\n      font-size: 10px;\n      max-height: 75px; }\n}\n@media (max-width: 1024px) {\n    .grid {\n      margin: 0;\n    }\n    .module {\n      min-width: 60px;\n    }\n}\n",null],"sourceRoot":"../src"}